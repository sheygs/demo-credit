services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./volumes/cache:/data
  mysql:
    container_name: mysql
    image: mysql
    command: --mysql-native-password=ON
    restart: always
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -u${MYSQL_USER} -p${MYSQL_PASSWORD}']
      interval: 10s
      timeout: 5s
      retries: 5
  api-service:
    container_name: api-service
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_PORT=${NODE_PORT}
      - NODE_ENV=${NODE_ENV}
      #     - MYSQL_USER=${MYSQL_USER}
      #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      #     - MYSQL_HOST=mysql
      #     - MYSQL_PORT=3306
      #     - MYSQL_DATABASE=${MYSQL_DATABASE}
      #     - REDIS_PORT=${REDIS_PORT}
      #     - REDIS_HOST=redis
      #     - REDIS_CACHE_TTL=${REDIS_CACHE_TTL}

    ports:
      - '8281:8282'
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
